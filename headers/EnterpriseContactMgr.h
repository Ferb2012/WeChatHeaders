//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MMService.h"

#import "IContactMgrExt.h"
#import "IEnterpriseGroupMgrExt.h"
#import "IEnterpriseMsgExt.h"
#import "IMsgExt.h"
#import "MMService.h"
#import "PBMessageObserverDelegate.h"

@class NSMutableArray, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSString;

@interface EnterpriseContactMgr : MMService <MMService, PBMessageObserverDelegate, IContactMgrExt, IEnterpriseMsgExt, IEnterpriseGroupMgrExt, IMsgExt>
{
    NSMutableDictionary *m_dicContactDB;
    NSMutableDictionary *m_dicContactsCache;
    NSMutableDictionary *m_dicUserId2BrandName;
    NSMutableArray *m_aryGetUserContactRunningQueue;
    NSMutableArray *m_aryGetUserContactWatingQueue;
    NSMutableArray *m_aryGetBizChatInfoRunningQueue;
    NSMutableArray *m_aryGetBizChatInfoWatingQueue;
    NSMutableArray *m_deleteQueue;
    _Bool m_isDeletingContact;
    NSObject<OS_dispatch_queue> *m_deleteDispatchQueue;
    NSString *m_brandUserName;
    unsigned int m_flag;
}

- (void).cxx_destruct;
- (void)OnGetNewXmlMsg:(id)arg1 Type:(id)arg2 MsgWrap:(id)arg3;
- (void)MessageReturn:(id)arg1 Event:(unsigned int)arg2;
- (void)onUpdateEnterpriseGroupSetting:(id)arg1 errorCode:(int)arg2;
- (void)onUpdateEnterpriseGroupName:(id)arg1 errorCode:(int)arg2;
- (void)onUpdateEnterpriseGroupMemberList:(id)arg1 errorCode:(int)arg2;
- (void)onQuitEnterpriseGroup:(id)arg1 errorCode:(int)arg2;
- (void)onCreateEnterpriseGroup:(id)arg1 errorCode:(int)arg2;
- (void)OnGetNewEnterpriseMsg:(id)arg1 Brand:(id)arg2;
- (void)onModifyContact:(id)arg1;
- (void)handleUpdateBizhChatInfo:(id)arg1;
- (void)handleChatRoomContact:(id)arg1 needUpdateDB:(_Bool)arg2;
- (void)batchUpdateContactDB:(id)arg1;
- (void)handleGetBizChatInfoList:(id)arg1;
- (void)handleGetBizChatMyUserInfo:(id)arg1;
- (void)updateMyContactFromSvrResp:(id)arg1 userName:(id)arg2 chatUser:(id)arg3;
- (void)handleUpdateMyContactFlag:(id)arg1;
- (void)handleGetBizChatUserInfoList:(id)arg1;
- (void)batchUpdateUserInfo:(id)arg1;
- (void)batchUpdateChatInfo:(id)arg1;
- (_Bool)forceUpdateMyContact:(id)arg1;
- (void)updateMyContactUserFlag:(id)arg1 bitMask:(unsigned int)arg2 bitValue:(unsigned int)arg3;
- (void)clearGetUserContactInfoRunningQueue;
- (void)batchAddGetUserInfoQueue:(id)arg1 brandName:(id)arg2;
- (void)checkGetUserContactInfoWaitingQueue;
- (_Bool)hasInGetUserContactWaitingQueue:(id)arg1;
- (_Bool)hasInGetUserContactRunningQueue:(id)arg1;
- (void)clearGetChatInfoRunningQueue;
- (void)addGetChatInfoQueue:(id)arg1 brandUserName:(id)arg2;
- (void)addGetChatInfoQueueWithoutCheck:(id)arg1 brandUserName:(id)arg2;
- (void)checkGetBizChatInfoWaitingQueue;
- (_Bool)hasInGetBizChatInfoWaitingQueue:(id)arg1;
- (_Bool)hasInGetBizChatInfoRunningQueue:(id)arg1;
- (_Bool)localUpdate:(id)arg1 brand:(id)arg2 contactDic:(id)arg3;
- (void)onCallModifyBatchContactExtension:(id)arg1;
- (void)onCallModifyContactExtension:(id)arg1;
- (void)doDeleteAllContactsForBrand:(id)arg1;
- (void)checkDeleteQueue;
- (void)addDeleteTask:(id)arg1;
- (void)restoreDeleteQueue;
- (void)saveDeleteQueue;
- (_Bool)addContact:(id)arg1 AtUser:(id)arg2;
- (_Bool)deleteAtUserList:(id)arg1;
- (void)deleteAllContactsForBrand:(id)arg1;
- (void)localUpdateEnterpriseContactUserFlag:(id)arg1 brand:(id)arg2 userFlag:(unsigned int)arg3;
- (void)modifyEnterpriseHeadImageUpdateFlag:(id)arg1 isNeedUpdate:(_Bool)arg2;
- (id)getMyContact:(id)arg1;
- (_Bool)tryUpdateMyContact:(id)arg1;
- (void)handleGetFavBizChatList:(id)arg1;
- (void)updateFavBizChatListFromSvr:(id)arg1;
- (id)getFavContactListByBrand:(id)arg1;
- (_Bool)updateFavContactList:(id)arg1 brand:(id)arg2;
- (_Bool)tryUpdateEnterpriseContact:(id)arg1 brand:(id)arg2 contactVer:(unsigned int)arg3;
- (id)getContactByUserName:(id)arg1 brand:(id)arg2;
- (id)getContactByUserName:(id)arg1;
- (id)getContactByUserName:(id)arg1 displayName:(id)arg2 brand:(id)arg3;
- (_Bool)setContact:(id)arg1 chatState:(unsigned int)arg2;
- (_Bool)setContact:(id)arg1 draft:(id)arg2;
- (id)getEnterpriseDBWithBrandUserName:(id)arg1;
- (id)dbPathForBrandUserName:(id)arg1;
- (void)onServiceInit;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

